DONE - Struct unpacking
DONE - Fix for loops
DONE - Fix function calls
DONE - Arrays
DONE - Character literals
DONE - Lines numbers in c comments

Improve array type inference
Add closures
Add defer
Bounds check arrays
Interfaces
Implicit struct conversions
DONE - Fix syntax highlighting
Add function argument region annotations
Add conditional auto-copying when moving values between regions
DONE - Reimplement array literals
DONE - Fix binary expressions
DONE - Fix for loops
Check if we're in a loop for break/continue
Fix loop lifetime backpropagation

### Roadmap to v0.01
	DONE - Remove let
	DONE - Remove read only pointers and arrays
	- Make function returns explicit
	- Add optional types to locals
	- Regions types
	- regionof operator
	- Region constraints on functions, structs, unions, and locals
	- Explicit regions
	- Helix exported functions
	- C exported functions
	- Rename pointers to references
	- Add C pointers
	- bytes
	- strings

DONE ### PROJECT ZIP: Merge the typechecking and flow analysis phases
	DONE - Get loops to flow analyze without prior information (variable capture)
	DONE - Merge return types, captured variables, predicates, and syntax lifetimes
		   into a single "tag" dictionary
	DONE - Merge type frame and flow frame

DONE ### The Lifetimes Update
	DONE - Reimplement lvalues
	DONE - Add back address of operator
	DONE - Revive lifetime testing suite
	DONE - Refactor IdentifierPath to VariablePath
	DONE - Add content and location fields to Lifetime
	DONE - Invalidate variables if aliasing could occur in assignments
	DONE - Infer region allocation for let/var
	DONE - Infer region allocation for function parameters
	DONE - Invalidate variables if aliasing could occur in function calls
	DONE - Reimplement lifetimes with if expressions
	DONE - Reimplement lifetimes with loops
	DONE - Reimplement lifetimes with pointer dereferencing
	DONE - Reimplement lifetimes with function calls
	DONE - Clean up lifetime codegen

### The Primitives Update
	Bytes
	Longs
	Doubles
	Floor division and real division
	Better conversions (graph based)
	Casting
	String literals / Singular strings
	Coalescing
	Differentiate bitwise from logical operators

DONE ### The Imperative Update
	DONE - Assignment operators
	DONE - Iterable syntax trees
	DONE - Parser tree to imperative conversion
	DONE - Loop state machine conversion
	DONE - break, continue, return

### The Specialization Update
	Loop unrolling, inlining
	Generics
	Singular unification
	Compile-time expression interpretation
	Singular arrays / embedding binary data in c
	Partial function application, both automatic and with f(?, 4, ?)

### The Memory Update
	DONE - Address of operator
	DONE - Check return values for stack allocations
	DONE - Track lifetime dependencies between syntax trees
	DONE - lvalue member access for structs