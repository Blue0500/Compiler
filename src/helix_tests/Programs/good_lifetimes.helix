// ###
func test1() as int* {
	var x = 45;

	&x;
};

// ###
struct Test2Struct {
	var field as int**;
};

func test2(var n as Test2Struct) {
	var x = n.field**;

	n.field* = &x;
};

// ###
struct Test3Struct {
	let field as int;
};

func test3(let arg as Test3Struct) as int {
	arg.field;
};

// ###
struct Test4Struct {
	let next as Test4Struct*;
	let data as int;
};

func test4(let a as Test4Struct*) as int {
	var A = new Test4Struct { next= a };
	let B = &A;

	B*.next*.next*.data;
};

// ###
func test5(let arr as int*[]) as void {
	var x = 45;

	arr[0] = &x;
};

// ###
func test6(let arr as int*[]) as int* {
	var x = 45;

	arr[0] = &x;
	&x;
};

// ###
func test7(let arr as int*[]) as void {
	arr[0] = arr[1];
};

// ###
func test8(let a as int**) {
	var c = 10;

	a* = &c;	
};

// ###
func test9(let a as int**, let b as int**) as void {
	var c = a;	
	var d = new int;

	c* = &d;
};

// ###
func test10() as int* {
	var x = 5;
	var y = 10;

	var z = &x;
	z = &y;

	z;
};

// ###
func test11() as int* {
	var a = 10;
	var b = &a;
	var c = &b;

	c*;
};

// ###
func test12(let A as int**) as int* {
	var a = 5;
	var b = 10;

	var x = &a;
	var z = &x;
	
	z* = &b;

	x;
};

// ###
struct Point {
	var x as int;
	var y as int;
};

func test13(let z as Point**) as Point* {
	let p = create() ;

	z* = p;
	p;
};

func create() as Point* {
	var p = new Point { 10, 5 };

	&p;
};

// ###
struct Point {
	var x as int;
	var y as int;
};

func test14(let z as Point**) as Point* {
	let p = if true 
		then create() 
		else {
			var y = new Point;

			&y;
		};

	z* = p;
	p;
};

func create() as Point* {
	var p = new Point { 10, 5 };

	&p;
};

// ###
struct Point {
	var x as int;
	var y as int;
};

func test15(let a as Point**, let b as Point**) {
	var c = a;

	if true then {
		c = b;
	};

	var x = new Point { 10, 5 };
	c* = &x;
};

// ###
func test16(var a as int*) {
	var x = &a;

	for i = 0 to 10 {
		var b = 10;
		var c = &b;

		x = &c;
	};
};

// ###
union Option {
	var none as void;
	var some as int*;
};

func test17() as Option {
	var x = 45;
	var y = new Option { some= &x };

	if y is some then {
		var z = 10;
		y = &z;
	};

	y;
};