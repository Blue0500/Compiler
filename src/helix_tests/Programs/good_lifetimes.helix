// ###
func test1() as word* {
	var x = 45;

	return &x;
};

// ###
struct Test2Struct {
	var field as word**;
};

func test2(var n as Test2Struct) {
	var x = n.field**;

	n.field* = &x;
};

// ###
struct Test3Struct {
	var field as word;
};

func test3(var arg as Test3Struct) as word {
	return arg.field;
};

// ###
struct Test4Struct {
	var next as Test4Struct*;
	var data as word;
};

func test4(var a as Test4Struct*) as word {
	var A = new Test4Struct { next= a };
	var B = &A;

	return B*.next*.next*.data;
};

// ###
func test5(var arr as word*[]) as void {
	var x = 45;

	arr[0] = &x;
};

// ###
func test6(var arr as word*[]) as word* {
	var x = 45;

	arr[0] = &x;
	return &x;
};

// ###
func test7(var arr as word*[]) as void {
	arr[0] = arr[1];
};

// ###
func test8(var a as word**) {
	var c = 10;

	a* = &c;	
};

// ###
func test9(var a as word**, var b as word**) as void {
	var c = a;	
	var d = new word;

	c* = &d;
};

// ###
func test10() as word* {
	var x = 5;
	var y = 10;

	var z = &x;
	z = &y;

	return z;
};

// ###
func test11() as word* {
	var a = 10;
	var b = &a;
	var c = &b;

	return c*;
};

// ###
func test12(var A as word**) as word* {
	var a = 5;
	var b = 10;

	var x = &a;
	var z = &x;
	
	z* = &b;
	return x;
};

// ###
struct Point {
	var x as word;
	var y as word;
};

func test13(var z as Point**) as Point* {
	var p = create() ;

	z* = p;
	return p;
};

func create() as Point* {
	var p = new Point { 10, 5 };

	return &p;
};

// ###
struct Point {
	var x as word;
	var y as word;
};

func test14(var z as Point**) as Point* {
	var p = if true 
		then create() 
		else {
			var y = new Point;

			&y;
		};

	z* = p;
	return p;
};

func create() as Point* {
	var p = new Point { 10, 5 };

	return &p;
};

// ###
struct Point {
	var x as word;
	var y as word;
};

func test15(var a as Point**, var b as Point**) {
	var c = a;

	if true then {
		c = b;
	};

	var x = new Point { 10, 5 };
	c* = &x;
};

// ###
func test16(var a as word*) {
	var x = &a;

	for i = 0 to 10 {
		var b = 10;
		var c = &b;

		x = &c;
	};
};

// ###
union Option {
	var none as void;
	var some as word*;
};

func test17() as Option {
	var x = 45;
	var y = new Option { some= &x };

	if y is some then {
		var z = 10;
		y = &z;
	};

	return y;
};

// ###
struct Point {
	var x as word*;
};

func test3() as word* {
	var x = 15;
	var p = new Point { x = &x };

	return p.x;
};

// ###
func test16(var B as bool) as word {
	var x = 45;

	if B then {
		x = 89;
	};

	return (x + 3) - 2;
};