//type x = int;

func opaque() => {
	
};

struct Recursive {
	let x as Recursive;
};

func test(let z as int^, let test as 4) as int => {
	var x = *z;
	//let x = 45;

	//*z = 45;


	var p = test;

	p = 10;

	while x < 4 do {
		//x = x / 2;
	};

	//void as Point
	//void as int^

	// Comment
	if x > 3 then true else 78;

	// let z = put Point { x= 1, y= 4 };
};

func other(let x as int) as int => x + 10;

struct Point {
	let x as int;
	let y as int;
};

extern func add(let x as int, let y as int) as int;