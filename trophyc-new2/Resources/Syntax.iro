#################################################################
## Iro
################################################################ 
##
## * Press Ctrl + '+'/'-' To Zoom in
## * Press Ctrl + S to save and recalculate... 
## * Documents are saved to web storage.
## * Only one save slot supported.
## * Matches cannot span lines.
## * Unicode chars must be defined in \u0000 to \uffff format.
## * All matches must be contained by a single group ( ... )
## * Look behinds not permitted, (?<= or (?<!
## * Look forwards are permitted (?= or (?!
## * Constants are defined as __my_const = (......)
## * The \= format allows unescaped regular expressions
## * Constants referenced by match \= $${__my_const}
## * Constants can reference other constants
## * You are free to delete all the default scopes.
## * Twitter : ainslec , Web: http://eeyo.io/iro
##
################################################################

name                   = trophy
file_extensions []     = trophy;
background_color       = white
color                  = black

contexts [] {
   main : context {
      : pattern {
         regex \= (struct|union)(\s+[a-zA-Z][a-zA-Z0-9]*)
         styles []= .keyword, .typeName;
      }
      
      : pattern {
         regex \= (as\s+)((?!int|bool|void)[a-zA-Z][a-zA-Z0-9]*)
         styles []= .keyword, .typeName;
      }
      
      : pattern {
         regex \= (as\s+)((?=int|bool|void))
         styles []= .keyword, .keyword;
      }
      
      : pattern {
         regex \= (int|bool|void|var|let|if|then|else|while|do|func|as)
         styles []= .keyword;
      }
      
      : pattern {
         regex \= ([a-zA-Z][a-zA-Z0-9]*)(?=\s*\(.*\))
         styles [] = .functionName;
      }
      
      : pattern {
         regex \= (\/\/.*)
         styles []= .comment;
      }
   }
}

styles [] {
   .keyword       : style color = "blue" textmate_scope = "keyword";
   .functionName  : style color = "brown" textmate_scope = "entity.name.function";
   .typeName      : style color = "red" textmate_scope = "entity.name.type";
   .comment       : style color = "green" textmate_scope = "comment";
}
